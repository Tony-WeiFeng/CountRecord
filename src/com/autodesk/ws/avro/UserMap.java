/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.autodesk.ws.avro;  
@SuppressWarnings("all")
public class UserMap extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserMap\",\"namespace\":\"com.autodesk.ws.avro\",\"fields\":[{\"name\":\"equiv_user_id\",\"type\":\"string\"},{\"name\":\"equiv_user_id_type\",\"type\":{\"type\":\"enum\",\"name\":\"UserIdType\",\"symbols\":[\"USER_DESKTOP\",\"USER_OXYGEN\",\"USER_EIDM\",\"USER_MOBILE\",\"USER_WEB\"]}}]}");
  @Deprecated public java.lang.CharSequence equiv_user_id;
  @Deprecated public com.autodesk.ws.avro.UserIdType equiv_user_id_type;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return equiv_user_id;
    case 1: return equiv_user_id_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: equiv_user_id = (java.lang.CharSequence)value$; break;
    case 1: equiv_user_id_type = (com.autodesk.ws.avro.UserIdType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'equiv_user_id' field.
   */
  public java.lang.CharSequence getEquivUserId() {
    return equiv_user_id;
  }

  /**
   * Sets the value of the 'equiv_user_id' field.
   * @param value the value to set.
   */
  public void setEquivUserId(java.lang.CharSequence value) {
    this.equiv_user_id = value;
  }

  /**
   * Gets the value of the 'equiv_user_id_type' field.
   */
  public com.autodesk.ws.avro.UserIdType getEquivUserIdType() {
    return equiv_user_id_type;
  }

  /**
   * Sets the value of the 'equiv_user_id_type' field.
   * @param value the value to set.
   */
  public void setEquivUserIdType(com.autodesk.ws.avro.UserIdType value) {
    this.equiv_user_id_type = value;
  }

  /** Creates a new UserMap RecordBuilder */
  public static com.autodesk.ws.avro.UserMap.Builder newBuilder() {
    return new com.autodesk.ws.avro.UserMap.Builder();
  }
  
  /** Creates a new UserMap RecordBuilder by copying an existing Builder */
  public static com.autodesk.ws.avro.UserMap.Builder newBuilder(com.autodesk.ws.avro.UserMap.Builder other) {
    return new com.autodesk.ws.avro.UserMap.Builder(other);
  }
  
  /** Creates a new UserMap RecordBuilder by copying an existing UserMap instance */
  public static com.autodesk.ws.avro.UserMap.Builder newBuilder(com.autodesk.ws.avro.UserMap other) {
    return new com.autodesk.ws.avro.UserMap.Builder(other);
  }
  
  /**
   * RecordBuilder for UserMap instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserMap>
    implements org.apache.avro.data.RecordBuilder<UserMap> {

    private java.lang.CharSequence equiv_user_id;
    private com.autodesk.ws.avro.UserIdType equiv_user_id_type;

    /** Creates a new Builder */
    private Builder() {
      super(com.autodesk.ws.avro.UserMap.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.autodesk.ws.avro.UserMap.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing UserMap instance */
    private Builder(com.autodesk.ws.avro.UserMap other) {
            super(com.autodesk.ws.avro.UserMap.SCHEMA$);
      if (isValidValue(fields()[0], other.equiv_user_id)) {
        this.equiv_user_id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.equiv_user_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.equiv_user_id_type)) {
        this.equiv_user_id_type = (com.autodesk.ws.avro.UserIdType) data().deepCopy(fields()[1].schema(), other.equiv_user_id_type);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'equiv_user_id' field */
    public java.lang.CharSequence getEquivUserId() {
      return equiv_user_id;
    }
    
    /** Sets the value of the 'equiv_user_id' field */
    public com.autodesk.ws.avro.UserMap.Builder setEquivUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.equiv_user_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'equiv_user_id' field has been set */
    public boolean hasEquivUserId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'equiv_user_id' field */
    public com.autodesk.ws.avro.UserMap.Builder clearEquivUserId() {
      equiv_user_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'equiv_user_id_type' field */
    public com.autodesk.ws.avro.UserIdType getEquivUserIdType() {
      return equiv_user_id_type;
    }
    
    /** Sets the value of the 'equiv_user_id_type' field */
    public com.autodesk.ws.avro.UserMap.Builder setEquivUserIdType(com.autodesk.ws.avro.UserIdType value) {
      validate(fields()[1], value);
      this.equiv_user_id_type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'equiv_user_id_type' field has been set */
    public boolean hasEquivUserIdType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'equiv_user_id_type' field */
    public com.autodesk.ws.avro.UserMap.Builder clearEquivUserIdType() {
      equiv_user_id_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public UserMap build() {
      try {
        UserMap record = new UserMap();
        record.equiv_user_id = fieldSetFlags()[0] ? this.equiv_user_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.equiv_user_id_type = fieldSetFlags()[1] ? this.equiv_user_id_type : (com.autodesk.ws.avro.UserIdType) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
